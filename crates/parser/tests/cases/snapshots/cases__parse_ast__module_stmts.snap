---
source: crates/parser/tests/cases/parse_ast.rs
expression: "ast_string(stringify!(module_stmts), module::parse_module,\n           r#\"\npragma 0.5.0\n\nimport foo as bar, baz as bum\n\ntype X = Map<u8, u16>\n\ncontract A:\n    pub const x: u256 = 10\n\ncontract B:\n    pub x: X\n\"#)"

---
Node(
  kind: Module(
    body: [
      Pragma(Node(
        kind: Pragma(
          version_requirement: Node(
            kind: "0.5.0",
            span: Span(
              start: 8,
              end: 13,
            ),
          ),
        ),
        span: Span(
          start: 1,
          end: 13,
        ),
      )),
      Import(Node(
        kind: Simple(
          names: [
            Node(
              kind: SimpleImportName(
                path: [
                  Node(
                    kind: "foo",
                    span: Span(
                      start: 22,
                      end: 25,
                    ),
                  ),
                ],
                alias: Some(Node(
                  kind: "bar",
                  span: Span(
                    start: 29,
                    end: 32,
                  ),
                )),
              ),
              span: Span(
                start: 22,
                end: 32,
              ),
            ),
            Node(
              kind: SimpleImportName(
                path: [
                  Node(
                    kind: "baz",
                    span: Span(
                      start: 34,
                      end: 37,
                    ),
                  ),
                ],
                alias: Some(Node(
                  kind: "bum",
                  span: Span(
                    start: 41,
                    end: 44,
                  ),
                )),
              ),
              span: Span(
                start: 34,
                end: 44,
              ),
            ),
          ],
        ),
        span: Span(
          start: 15,
          end: 44,
        ),
      )),
      TypeAlias(Node(
        kind: TypeAlias(
          name: Node(
            kind: "X",
            span: Span(
              start: 51,
              end: 52,
            ),
          ),
          typ: Node(
            kind: Generic(
              base: Node(
                kind: "Map",
                span: Span(
                  start: 55,
                  end: 58,
                ),
              ),
              args: Node(
                kind: [
                  TypeDesc(Node(
                    kind: Base(
                      base: "u8",
                    ),
                    span: Span(
                      start: 59,
                      end: 61,
                    ),
                  )),
                  TypeDesc(Node(
                    kind: Base(
                      base: "u16",
                    ),
                    span: Span(
                      start: 63,
                      end: 66,
                    ),
                  )),
                ],
                span: Span(
                  start: 58,
                  end: 67,
                ),
              ),
            ),
            span: Span(
              start: 55,
              end: 67,
            ),
          ),
        ),
        span: Span(
          start: 46,
          end: 67,
        ),
      )),
      Contract(Node(
        kind: Contract(
          name: Node(
            kind: "A",
            span: Span(
              start: 78,
              end: 79,
            ),
          ),
          fields: [
            Node(
              kind: Field(
                is_pub: true,
                is_const: true,
                name: Node(
                  kind: "x",
                  span: Span(
                    start: 95,
                    end: 96,
                  ),
                ),
                typ: Node(
                  kind: Base(
                    base: "u256",
                  ),
                  span: Span(
                    start: 98,
                    end: 102,
                  ),
                ),
                value: Some(Node(
                  kind: Num("10"),
                  span: Span(
                    start: 105,
                    end: 107,
                  ),
                )),
              ),
              span: Span(
                start: 85,
                end: 102,
              ),
            ),
          ],
          body: [],
        ),
        span: Span(
          start: 69,
          end: 102,
        ),
      )),
      Contract(Node(
        kind: Contract(
          name: Node(
            kind: "B",
            span: Span(
              start: 118,
              end: 119,
            ),
          ),
          fields: [
            Node(
              kind: Field(
                is_pub: true,
                is_const: false,
                name: Node(
                  kind: "x",
                  span: Span(
                    start: 129,
                    end: 130,
                  ),
                ),
                typ: Node(
                  kind: Base(
                    base: "X",
                  ),
                  span: Span(
                    start: 132,
                    end: 133,
                  ),
                ),
                value: None,
              ),
              span: Span(
                start: 125,
                end: 133,
              ),
            ),
          ],
          body: [],
        ),
        span: Span(
          start: 109,
          end: 133,
        ),
      )),
    ],
  ),
  span: Span(
    start: 0,
    end: 133,
  ),
)
